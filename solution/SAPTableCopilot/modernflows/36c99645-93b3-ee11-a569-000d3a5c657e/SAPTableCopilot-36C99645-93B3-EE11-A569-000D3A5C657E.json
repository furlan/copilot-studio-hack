{
  "properties": {
    "connectionReferences": {
      "shared_saperp_3": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "new_sharedsaperp_c23a3"
        },
        "api": {
          "name": "shared_saperp"
        }
      },
      "shared_office365users": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "new_sharedoffice365users_76334"
        },
        "api": {
          "name": "shared_office365users"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "AzureOpenAITableCopilotURL (cr680_AzureOpenAITableCopilotURL)": {
          "defaultValue": "https://your-endpoint.openai.azure.com/openai/deployments/gpt-4-32k/chat/completions?api-version=2023-07-01-preview",
          "type": "String",
          "metadata": {
            "schemaName": "cr680_AzureOpenAITableCopilotURL",
            "description": "AzureOpenAITableCopilotURL"
          }
        },
        "AzureOpenAITableCopilotKEY (cr680_AzureOpenAITableCopilotKEY)": {
          "defaultValue": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
          "type": "String",
          "metadata": {
            "schemaName": "cr680_AzureOpenAITableCopilotKEY",
            "description": "AzureOpenAITableCopilotKEY"
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "17539ec0-c081-413b-a152-b475bf6eea1f"
          },
          "type": "Request",
          "kind": "VirtualAgent",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "UnrecognizedTriggerPhrase",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "FullDialog",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1"
              ]
            }
          }
        }
      },
      "actions": {
        "HTTP": {
          "runAfter": {
            "Apply_to_each": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c06b40a-5f32-4cf7-9b1e-08811d471fd5"
          },
          "type": "Http",
          "inputs": {
            "method": "POST",
            "uri": "@parameters('AzureOpenAITableCopilotURL (cr680_AzureOpenAITableCopilotURL)')",
            "headers": {
              "content-type": "application/json",
              "api-key": "@parameters('AzureOpenAITableCopilotKEY (cr680_AzureOpenAITableCopilotKEY)')"
            },
            "body": {
              "messages": "@variables('Messages')",
              "temperature": 0
            }
          }
        },
        "System_Prompt_1": {
          "runAfter": {
            "Get_my_profile_(V2)": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "65975c9a-308c-4a74-8658-896c3ba4faea"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "System Prompt",
                "type": "string",
                "value": "You are an AI assistant specialized in assisting SAP users to get information out of their SAP system. You internact with the user and ask for information so that finally the Microsoft ERP SAP Table connector can be called to retrieve the information from the SAP System. \n\nThe Table connector is configured to connect to table SPFLI.\nThis table stores flight connection details.\n\nThe table has the following fields:\nCARRID\tCHAR\tInternational Airline Code\nCONNID\tNUMC\tFlight Connection Number\nCOUNTRYFR\tCHAR\tCountry/Region Key\nCITYFROM\tCHAR\tDeparture city\nAIRPFROM\tCHAR\tInternational cpde of departure airport\nCOUNTRYTO\tCHAR\tCountry/Region Key\nCITYTO\tCHAR\tArrival city\nAIRPTO\tCHAR\tInternational code of destination airport \nFLTIME\tINT4\tFlight time\nDEPTIME\tTIME\tDeparture time\nARRTIME\tTIME\tArrival time\nDISTANCE\tQUAN\tDistance\nDISTID\tUNIT\tMass unit of distance (kms, miles)\nPERIOD\tINT1\tArrival n day(s) later\n\nAll fields are configured in the connector and all values will be retrieved. \n\nDepending on the user question you should configure a suitable \"WhereFilters\" string: \nExample for a WhereFilters: \"CITYFROM = 'FRA' AND CITYTO = 'BER'\"\n\nCount of rows to read\tRowCount\t\tinteger\t\nThe count of rows to read.\nUse 100 per default unless the user is asking for more rows. \n\nExample data set for one flight connection:\n{\n    \"AIRPFROM\": \"FRA\",\n    \"AIRPTO\": \"JFK\",\n    \"ARRTIME\": \"125500\",\n    \"CARRID\": \"UA\",\n    \"CITYFROM\": \"FRANKFURT\",\n    \"CITYTO\": \"NEW YORK\",\n    \"CONNID\": \"3517\",\n    \"COUNTRYFR\": \"DE\",\n    \"COUNTRYTO\": \"US\",\n    \"DEPTIME\": \"104000\",\n    \"DISTANCE\": \"6162.0000\",\n    \"DISTID\": \"KM\",\n    \"FLTIME\": 495,\n    \"FLTYPE\": \"\",\n    \"PERIOD\": 0\n}\n\nProcess:\n1. Engage the user in a conversation and inquire what he would like to know about the data stored in the given table and columns. \n2. If the question is unclear, not precise or cannot be answered with the provided tables and columns ask the user for clarification.\n3. Remember to consider the entire conversation history to maintain context.\n4. If the SAP data is already part of the conversation check if you can answer the question. In that case there is need to trigger the SAP table connector again.\n\nResponse:\nOnce there is enough information available to execute the SAP ERP Table Connector respond with en explanation about what the question was and how you will retrieve the information by explaining which columns and where clauses are used. \nInclude a JSON so that within the power automate flow the information can be extracted for the ERP SAP Table Connector. \n\nExample Question:\nWhich flights are departing from Frankfurt?\n\nExample Response:\nWe will use the table SPFLI and the field AIRPFROM to filter for flights departing from Frankfurt (FRA).\nHere is the JSON for the ERP SAP Table Connector:\n```json\n{\n\t\"action\": \"read_table_spfli\",\n\t\"WhereFilters\": \"AIRPFROM = 'FRA'\",\n\t\"RowCount\": 100\n}\n```\nThis will return the flight connection details for flights departing from Frankfurt. \n\nFurther instructions: \n- Do not use any square bracket [ or ] in the JSON as there is only string or integer.\n- Keep your explanations very short.\n- When you have the SAP Data from the sap-table-connector function available in the conversation try to answer the given question based on this data. \n- Hong Kong is stored as HONGKONG in the table spfli.\n- The maximum lenght of text field \"WhereFilters\" is limited to 72. Therefore pay attention to that and explain it to the user. In case his request leads to lengthy \"WhereFilters\" the user can alternatively iterate mutliple times through the SAP table connector to get all data he needs to answer the question.\n- When the user has a request that you cannot fullfill as AI explain it and do not include a json in the response.\n\nCurrent data/time is: @{convertTimeZone(utcNow(), 'UTC', 'W. Europe Standard Time', 'yyyy-MM-dd')}\nThe user is: @{outputs('Get_my_profile_(V2)')?['body/givenName']}. Call him by his name during the conversation to make it more personal.\n"
              }
            ]
          }
        },
        "Initialize_Message": {
          "runAfter": {
            "System_Prompt_2": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "499a891d-9aaa-4de9-a366-53aaea8448c9"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Messages",
                "type": "array",
                "value": [
                  {
                    "role": "system",
                    "content": "@{variables('System Prompt')}"
                  }
                ]
              }
            ]
          }
        },
        "Parse_JSON_-_Parse_previous_chat_history": {
          "runAfter": {
            "Initialize_a_variable2_for_handling": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "2cf10f52-09a8-4df5-839a-7f0ce1645018"
          },
          "type": "ParseJson",
          "inputs": {
            "content": "@json(\r\n  concat(\r\n    '[',\r\n    triggerBody()['text_1'],\r\n    '{\"role\": \"user\",\"content\": \"', \r\n    triggerBody()['text'], \r\n    '\" }]'\r\n  )\r\n)",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "role",
                  "content"
                ]
              }
            }
          }
        },
        "Apply_to_each": {
          "foreach": "@body('Parse_JSON_-_Parse_previous_chat_history')",
          "actions": {
            "Append_to_array_variable": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "38647471-1914-4ce0-81dc-0acb97eb8301"
              },
              "type": "AppendToArrayVariable",
              "inputs": {
                "name": "messages",
                "value": "@items('Apply_to_each')"
              }
            }
          },
          "runAfter": {
            "Parse_JSON_-_Parse_previous_chat_history": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "75bd0033-7713-4f59-9a33-f35a89732a09"
          },
          "type": "Foreach"
        },
        "Switch": {
          "runAfter": {
            "Parse_JSON_-_identified_action": [
              "Succeeded"
            ]
          },
          "cases": {
            "Case_read_table_spfli": {
              "case": "read_table_spfli",
              "actions": {
                "Parse_JSON_table": {
                  "runAfter": {
                    "Read_SAP_table_with_parsing": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "15c5f94d-f6bf-46e8-a44b-1bf0dc48eadf"
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@outputs('Read_SAP_table_with_parsing')?['body']",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "FieldsMetadata": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": {
                                "type": "string"
                              },
                              "Offset": {
                                "type": "integer"
                              },
                              "Length": {
                                "type": "integer"
                              },
                              "AbapDataType": {
                                "type": "string"
                              },
                              "Description": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "Name",
                              "Offset",
                              "Length",
                              "AbapDataType",
                              "Description"
                            ]
                          }
                        },
                        "Rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "AIRPFROM": {
                                "type": "string"
                              },
                              "AIRPTO": {
                                "type": "string"
                              },
                              "ARRTIME": {
                                "type": "string"
                              },
                              "CARRID": {
                                "type": "string"
                              },
                              "CITYFROM": {
                                "type": "string"
                              },
                              "CITYTO": {
                                "type": "string"
                              },
                              "CONNID": {
                                "type": "string"
                              },
                              "COUNTRYFR": {
                                "type": "string"
                              },
                              "COUNTRYTO": {
                                "type": "string"
                              },
                              "DEPTIME": {
                                "type": "string"
                              },
                              "DISTANCE": {
                                "type": "string"
                              },
                              "DISTID": {
                                "type": "string"
                              },
                              "FLTIME": {
                                "type": "integer"
                              },
                              "FLTYPE": {
                                "type": "string"
                              },
                              "PERIOD": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "AIRPFROM",
                              "AIRPTO",
                              "ARRTIME",
                              "CARRID",
                              "CITYFROM",
                              "CITYTO",
                              "CONNID",
                              "COUNTRYFR",
                              "COUNTRYTO",
                              "DEPTIME",
                              "DISTANCE",
                              "DISTID",
                              "FLTIME",
                              "FLTYPE",
                              "PERIOD"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Read_SAP_table_with_parsing": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "931a2320-3fc9-4b53-b6b4-f5a37e63ba41"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_saperp_3",
                      "operationId": "ReadTableVersion3",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_saperp"
                    },
                    "parameters": {
                      "x-ms-sap-system": "{ \"AppServerHost\": \" 10.7.0.5\", \"Client\": \"001\", \"SystemNumber\": \"00\", \"LogonType\": \"ApplicationServer\" }",
                      "inputParameters/tableName": "SPFLI",
                      "inputParameters/FieldNames": [
                        "AIRPFROM:Departure airport",
                        "AIRPTO:Destination airport",
                        "ARRTIME:Arrival time",
                        "CARRID:Airline Code",
                        "CITYFROM:Departure city",
                        "CITYTO:Arrival city",
                        "CONNID:Flight Connection Number",
                        "COUNTRYFR:Country Key",
                        "COUNTRYTO:Country Key",
                        "DEPTIME:Departure time",
                        "DISTANCE:Distance",
                        "DISTID:Mass unit of distance (kms, miles)",
                        "FLTIME:Flight time",
                        "FLTYPE:Flight type",
                        "PERIOD:Arrival n day(s) later"
                      ],
                      "inputParameters/RowCount": 100,
                      "inputParameters/WhereFilters": [
                        "@body('Parse_JSON_-_identified_action')['WhereFilters']"
                      ]
                    },
                    "authentication": "@parameters('$authentication')"
                  }
                },
                "Parse_JSON_chat_history_+_AI_response_+_SAP_data": {
                  "runAfter": {
                    "Set_variable": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "3b8f4e57-0a27-4445-aa71-06b9895fb214"
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@json(\r\n  concat(\r\n    '[',\r\n    triggerBody()['text_1'],\r\n    '{\"role\": \"user\",\"content\": \"', triggerBody()['text'], '\"}',\r\n    ',{\"role\": \"assistant\", \"content\": \"', replace(replace(replace(variables('variable2'), '```json', ''), '```', ''), '''' , '\\'''), '\"}',\r\n\t',{\"role\": \"function\", \"name\": \"sap-table-connector\", \"content\": \"', variables('variable1'), '\"}',\r\n    ']'\r\n  )\r\n)",
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "role",
                          "content"
                        ]
                      }
                    }
                  }
                },
                "Apply_to_each_messages_2": {
                  "foreach": "@body('Parse_JSON_chat_history_+_AI_response_+_SAP_data')",
                  "actions": {
                    "Append_to_array_variable_2": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "918d6ea1-2be6-4706-9723-73c788873f87"
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "Messages2",
                        "value": "@items('Apply_to_each_messages_2')"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_chat_history_+_AI_response_+_SAP_data": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "538a52e4-d7f5-4d4d-883b-f2ffa71bd338"
                  },
                  "type": "Foreach"
                },
                "Set_variable": {
                  "runAfter": {
                    "Condition": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "0c3c1c65-add5-48b4-a1e9-8f04094a60e7"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "variable2",
                    "value": "@{concat(first(split(variables('content'), '```json')), last(split(variables('content'), '```')))}"
                  }
                },
                "HTTP_2": {
                  "runAfter": {
                    "Apply_to_each_messages_2": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "d71bd723-ee69-4641-968b-5b539f35587c"
                  },
                  "type": "Http",
                  "inputs": {
                    "method": "POST",
                    "uri": "@parameters('AzureOpenAITableCopilotURL (cr680_AzureOpenAITableCopilotURL)')",
                    "headers": {
                      "content-type": "application/json",
                      "api-key": "@parameters('AzureOpenAITableCopilotKEY (cr680_AzureOpenAITableCopilotKEY)')"
                    },
                    "body": {
                      "messages": "@variables('Messages2')",
                      "temperature": 0
                    }
                  }
                },
                "Set_variable_2": {
                  "runAfter": {
                    "HTTP_2": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "280c07f9-281e-475a-bc67-1481643ef6e9"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "variable2",
                    "value": "@{body('HTTP_2')?['choices'][0]?['message']?['content']}"
                  }
                },
                "Condition": {
                  "actions": {
                    "Apply_to_each_row": {
                      "foreach": "@body('Parse_JSON_table')?['Rows']",
                      "actions": {
                        "Append_to_string_variable1": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "3c9b9706-e585-4718-a42c-21905da78e44"
                          },
                          "type": "AppendToStringVariable",
                          "inputs": {
                            "name": "variable1",
                            "value": "Flight Connection Number: @{items('Apply_to_each_row')?['CONNID']}, Airport from: @{items('Apply_to_each_row')?['AIRPFROM']}, Airport to: @{items('Apply_to_each_row')?['AIRPTO']}, Airline: @{items('Apply_to_each_row')?['CARRID']}, Distance: @{items('Apply_to_each_row')?['DISTANCE']} @{items('Apply_to_each_row')?['DISTID']}, Flight time: @{items('Apply_to_each_row')?['FLTIME']}, Country from: @{items('Apply_to_each_row')?['COUNTRYFR']}, Country to: @{items('Apply_to_each_row')?['COUNTRYTO']}, Depature city: @{items('Apply_to_each_row')?['CITYFROM']}, Arrival city: @{items('Apply_to_each_row')?['CITYTO']}@{variables('variable2')}"
                          }
                        }
                      },
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "1c6ba41a-2ba1-42e3-99d8-9454720336a0"
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 50
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_table": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Set_variable1_when_no_data_returned": {
                        "runAfter": {},
                        "metadata": {
                          "operationMetadataId": "1b84bb8c-c9a9-408e-b128-04ac779d2f43"
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "variable1",
                          "value": "The SAP table connector did not return data with this specific selection."
                        }
                      }
                    }
                  },
                  "expression": {
                    "not": {
                      "equals": [
                        "@length(body('Parse_JSON_table')?['Rows'])",
                        0
                      ]
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "b3ef110c-b719-450f-a9e4-34dc6bc3428d"
                  },
                  "type": "If"
                },
                "Return_value(s)_to_Power_Virtual_Agents_after_Table_Read": {
                  "runAfter": {
                    "Set_variable_2": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "478a7522-52df-4818-9cbd-c6182c555701"
                  },
                  "type": "Response",
                  "kind": "VirtualAgent",
                  "inputs": {
                    "statusCode": 200,
                    "body": {
                      "generatedanswer": "@variables('variable2')",
                      "originalunrecognizedtriggerphrase": "@triggerBody()['text']"
                    },
                    "schema": {
                      "type": "object",
                      "properties": {
                        "generatedanswer": {
                          "title": "Generatedanswer",
                          "x-ms-dynamically-added": true,
                          "type": "string"
                        },
                        "originalunrecognizedtriggerphrase": {
                          "title": "OriginalUnrecognizedTriggerPhrase",
                          "x-ms-dynamically-added": true,
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "actions": {
              "Return_value(s)_to_Power_Virtual_Agents_Default": {
                "runAfter": {},
                "metadata": {
                  "operationMetadataId": "ad53a625-3783-4814-8168-bac0f45795c5"
                },
                "type": "Response",
                "kind": "VirtualAgent",
                "inputs": {
                  "statusCode": 200,
                  "body": {
                    "generatedanswer": "@{body('HTTP')?['choices'][0]?['message']?['content']}",
                    "originalunrecognizedtriggerphrase": "@triggerBody()['text']"
                  },
                  "schema": {
                    "type": "object",
                    "properties": {
                      "generatedanswer": {
                        "title": "Generatedanswer",
                        "x-ms-dynamically-added": true,
                        "type": "string"
                      },
                      "originalunrecognizedtriggerphrase": {
                        "title": "OriginalUnrecognizedTriggerPhrase",
                        "x-ms-dynamically-added": true,
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "expression": "@body('Parse_JSON_-_identified_action')['action']",
          "metadata": {
            "operationMetadataId": "09908d5a-7f09-4f06-8f03-5bbbc1a355e5"
          },
          "type": "Switch"
        },
        "Initialize_variable_for_1st_AI_response": {
          "runAfter": {
            "HTTP": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "4303efc0-6606-413a-8c81-87e1968d5ec1"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "content",
                "type": "string",
                "value": "@{body('HTTP')?['choices'][0]?['message']?['content']}"
              }
            ]
          }
        },
        "Parse_JSON_-_identified_action": {
          "runAfter": {
            "Initialize_variable_for_1st_AI_response": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "08e37f0c-0f59-4d30-a647-7ed76b155520"
          },
          "type": "ParseJson",
          "inputs": {
            "content": "@if (contains(variables('content'), '{'), \r\n    substring(\r\n        variables('content'), \r\n        indexOf(variables('content'), '{'),  \r\n        add(\r\n            sub(\r\n                lastIndexOf(variables('content'), '}'), \r\n                indexOf(variables('content'), '{')\r\n            ), \r\n            1\r\n        )\r\n    ), \r\n    '{\"action\": \"none\"}'\r\n)\r\n",
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string"
                },
                "tableName": {
                  "type": "string"
                },
                "FieldNames": {
                  "type": "string"
                },
                "WhereFilters": {
                  "type": "string"
                },
                "RowCount": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "Initialize_a_variable1_for_handling": {
          "runAfter": {
            "Initialize_Message_2": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "b830052b-c5fa-4557-bbf7-9c6941d658f9"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "variable1",
                "type": "string"
              }
            ]
          }
        },
        "Initialize_a_variable2_for_handling": {
          "runAfter": {
            "Initialize_a_variable1_for_handling": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "239855dc-5a7b-4395-b550-686c06f68cbf"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "variable2",
                "type": "string",
                "value": "\n"
              }
            ]
          }
        },
        "Get_my_profile_(V2)": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "336adebb-92aa-4407-bd2a-10e092e6b078"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_office365users",
              "operationId": "MyProfile_V2",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users"
            },
            "parameters": {},
            "authentication": "@parameters('$authentication')"
          }
        },
        "System_Prompt_2": {
          "runAfter": {
            "System_Prompt_1": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "65975c9a-308c-4a74-8658-896c3ba4faea"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "System Prompt 2",
                "type": "string",
                "value": "You are an AI assistant specialized in assisting SAP users to get information out of their SAP system.\nIn a previous discussion with you followed by an SAP table read request we received the data from SAP that will help to answer the question from the user. \nPlease check the full conversation and find out if the question from the user has already been answered or if you can provide more precise responses based on the SAP data included in the conversation. \n\nThe Table name is SPFLI and it stores flight connection details.\nThe table has the following fields:\nCARRID\tCHAR\tAirline Code\nCONNID\tNUMC\tFlight Connection Number\nCOUNTRYFR\tCHAR\tCountry/Region Key\nCITYFROM\tCHAR\tDeparture city\nAIRPFROM\tCHAR\tDeparture airport\nCOUNTRYTO\tCHAR\tCountry/Region Key\nCITYTO\tCHAR\tArrival city\nAIRPTO\tCHAR\tDestination airport\nFLTIME\tINT4\tFlight time\nDEPTIME\tTIME\tDeparture time\nARRTIME\tTIME\tArrival time\nDISTANCE\tQUAN\tDistance\nDISTID\tUNIT\tMass unit of distance (kms, miles)\nPERIOD\tINT1\tArrival n day(s) later\n\nFurther instructions: \n- Keep your answer very short.\n- Use lists to improve readability. \n- In case the SAP data countains 100 rows we have hit the default row limit. Please advise the user to ask the original question again and to provide a higher number of rows to select from.\n- Current date and time is: @{convertTimeZone(utcNow(), 'UTC', 'W. Europe Standard Time', 'yyyy-MM-dd')}\n- The user asking is: @{outputs('Get_my_profile_(V2)')?['body/givenName']}"
              }
            ]
          }
        },
        "Initialize_Message_2": {
          "runAfter": {
            "Initialize_Message": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "499a891d-9aaa-4de9-a366-53aaea8448c9"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Messages2",
                "type": "array",
                "value": [
                  {
                    "role": "system",
                    "content": "@{variables('System Prompt 2')}"
                  }
                ]
              }
            ]
          }
        }
      },
      "outputs": {}
    },
    "templateName": "c9cd2c4e691a4646adc8aa592c88489b"
  },
  "schemaVersion": "1.0.0.0"
}